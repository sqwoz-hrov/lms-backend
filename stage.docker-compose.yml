services:
  lms-backend:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - PORT=$PORT
    container_name: lms-backend
    restart: always
    env_file:
      - .env
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.lms-backend.rule=Host(`stage.sqwoz-hrov.ru`) && PathPrefix(`/lms`)'
      - 'traefik.http.routers.lms-backend.entrypoints=websecure'
      - 'traefik.http.routers.lms-backend.tls=true'
      - 'traefik.http.routers.lms-backend.tls.certresolver=myresolver'
      - 'traefik.http.services.lms-backend.loadbalancer.server.port=${PORT}'
      - 'traefik.http.middlewares.lms-backend-stripprefix.stripprefix.prefixes=/lms'
      - 'traefik.http.routers.lms-backend.middlewares=lms-backend-stripprefix@docker'
    networks:
      - traefik
      - lms-network 
    extra_hosts:
      - "host.docker.internal:host-gateway"

  lms-redis:
    image: redis:8
    container_name: lms-redis
    restart: always
    command: ["redis-server", "--requirepass", "$REDIS_PASSWORD"]
    networks:
      - lms-network

networks:
  traefik:
    external: true
    name: $TRAEFIK_NETWORK

  lms-network:
    driver: bridge
